"use strict";var wantToStopMove=!1,myCircleRadius=0,Global_Rectangle_Width,Global_Rectangle_Height,Global_TriangleBase,Global_xPos=300,Global_yPos=175,Global_step=2;class Shape{constructor(shapeName,color,speed){this._shapeName=shapeName,this._color=color,this._speed=speed,this.dx=1*this._speed,this.dy=1*this._speed}get shapeName(){return this._shapeName}set shapeName(x){this._shapeName=x}get color(){return this._color}set color(y){this._color=y}get speed(){return this._speed}set speed(z){this._speed=z}draw(myCommand){var canvas=document.getElementById("myCanvas"),c=canvas.getContext("2d");c.beginPath(),c.fillStyle=this._color,eval(myCommand),c.fill(),c.closePath()}stop(element){clearInterval(element)}}class myRectangle extends Shape{constructor(width,height,color){super("Rectangle",color),this._width=parseInt(width),this._height=parseInt(height),Global_Rectangle_Width=this._width,Global_Rectangle_Height=this._height}get width(){return this._width}set width(x){this._width=parseInt(x)}get height(){return this._height}set height(x){this._height=parseInt(x)}area(){let recArea;return this._width*this._height}circumference(){let circum;return 2*(this._width+this.height)}moveRectangle(wantToMoveShape,xPos,yPos,firstTime,wantToStopMove){var canvas=document.getElementById("myCanvas"),w=canvas.width,h=canvas.height;let step=Global_step,movingElement=setInterval((function(){wantToStopMove=myStopFunction(),xPos+Global_Rectangle_Width>w&&(step=-step),xPos<0&&(step=-step),yPos<0&&(step=-step),yPos+Global_Rectangle_Height>h&&(step=-step),Global_xPos=xPos+=step,Global_yPos=yPos+=step,Global_step=step,eraseShapeF(),shapeSelector(wantToMoveShape,xPos,yPos,firstTime,wantToStopMove,movingElement)}),50)}}class myCircle extends Shape{constructor(radius,color){super("Circle",color),this._radius=parseInt(radius),myCircleRadius=this._radius}get radius(){return this._radius}set radius(x){this._radius=parseInt(x)}area(){let circleArea;return Math.round(Math.PI*Math.pow(this._radius,2))}circumference(){let circum;return Math.round(2*Math.PI*this._radius)}moveCircle(wantToMoveShape,xPos,yPos,firstTime,wantToStopMove){var canvas=document.getElementById("myCanvas"),w=canvas.width,h=canvas.height;let step=Global_step,movingElement=setInterval((function(){wantToStopMove=myStopFunction(),xPos+myCircleRadius>w&&(step=-step),xPos-myCircleRadius<0&&(step=-step),yPos+myCircleRadius>h&&(step=-step),yPos-myCircleRadius<0&&(step=-step),Global_xPos=xPos+=step,Global_yPos=yPos+=step,Global_step=step,eraseShapeF(),shapeSelector(wantToMoveShape,xPos,yPos,firstTime,wantToStopMove,movingElement)}),50)}}class myTriangle extends Shape{constructor(base,color){super("Triangle",color),this._base=parseInt(base),Global_TriangleBase=this._base}get base(){return this._base}set base(x){this._base=parseInt(x)}area(){let triangleArea;return Math.round(this._base*this._base/2)}circumference(){let triangleCircum;return Math.round(this._base*(2+Math.sqrt(2)))}moveTriangle(wantToMoveShape,xPos,yPos,firstTime,wantToStopMove){var canvas=document.getElementById("myCanvas"),w=canvas.width,h=canvas.height;let step=Global_step,movingElement=setInterval((function(){wantToStopMove=myStopFunction(),xPos+Global_TriangleBase>w&&(step=-step),xPos<0&&(step=-step),yPos+Global_TriangleBase>h&&(step=-step),yPos<0&&(step=-step),Global_xPos=xPos+=step,Global_yPos=yPos+=step,Global_step=step,eraseShapeF(),shapeSelector(wantToMoveShape,xPos,yPos,firstTime,wantToStopMove,movingElement)}),50)}}function rectangularButton(xPos,yPos,width,height,color){let mostatil=new myRectangle(width,height,color),myCommand=`c.rect(${xPos}, ${yPos}, this._width, this._height);`;return mostatil.draw(myCommand),textRender(mostatil.shapeName,mostatil.area(),mostatil.circumference()),mostatil}function circleButton(xPos,yPos,radius,color){let dayereh=new myCircle(radius,color),myCommand="c.arc("+xPos+","+yPos+", this._radius, 0, 2*Math.PI);";return dayereh.draw(myCommand),textRender(dayereh.shapeName,dayereh.area(),dayereh.circumference()),dayereh}function triangleButton(xPos,yPos,base,color){let mosalas=new myTriangle(base,color),myCommand=`c.moveTo(${xPos}, ${yPos});\n    let base = ${base};\n    let newX = ${xPos} + base;\n    let newY = ${yPos} + base;\n    c.lineTo(${xPos}, newY);\n    c.lineTo(newX, newY);`;return mosalas.draw(myCommand),textRender(mosalas.shapeName,mosalas.area(),mosalas.circumference()),mosalas}function textRender(shapeName,shapeArea,shapeCircumference){let myText=`The area of this <span class="redText">${shapeName}  </span> is <span class="redText">${shapeArea}</span> \n    and its circumference is <span class="redText">${shapeCircumference}</span>`;document.getElementById("shapeInformation").innerHTML=myText}function shapeSelector(wantToMoveShape,xPos,yPos,firstTime,wantToStopMove,movingElement){let mySelectedShape=document.getElementById("shape").value,SelectedColor=document.getElementById("shapeColor").value,insertedLengthValue=document.getElementById("length").value;switch(mySelectedShape){case"Circle":let dayereh=circleButton(xPos,yPos,insertedLengthValue,SelectedColor);!0===wantToMoveShape&&0==firstTime&&(firstTime++,dayereh.moveCircle(wantToMoveShape,xPos,yPos,firstTime,wantToStopMove)),wantToStopMove&&dayereh.stop(movingElement);break;case"Rectangle":let insertedLengthValue_2,mostatil=rectangularButton(xPos,yPos,insertedLengthValue,document.getElementById("length2").value,SelectedColor);!0===wantToMoveShape&&0==firstTime&&(firstTime++,mostatil.moveRectangle(wantToMoveShape,xPos,yPos,firstTime,wantToStopMove)),wantToStopMove&&mostatil.stop(movingElement);break;case"Triangle":let mosalas=triangleButton(xPos,yPos,insertedLengthValue,SelectedColor);!0===wantToMoveShape&&0==firstTime&&(firstTime++,mosalas.moveTriangle(wantToMoveShape,xPos,yPos,firstTime,wantToStopMove)),wantToStopMove&&mosalas.stop(movingElement)}}function eraseShapeF(){var canvas=document.getElementById("myCanvas"),c;canvas.getContext("2d").clearRect(0,0,canvas.width,canvas.height)}function changeLabelText(){let mySelectedShape;switch(document.getElementById("shape").value){case"Circle":document.getElementById("myShapeTypeLabel").innerHTML="Radius:",document.getElementById("myShapeTypeLabel_2").style.display="none",document.getElementById("length2").style.display="none";break;case"Rectangle":document.getElementById("myShapeTypeLabel").innerHTML="Width:",document.getElementById("myShapeTypeLabel_2").style.display="inline",document.getElementById("length2").style.display="inline";break;case"Triangle":document.getElementById("myShapeTypeLabel").innerHTML="Base:",document.getElementById("length").value=120,document.getElementById("myShapeTypeLabel_2").style.display="none",document.getElementById("length2").style.display="none"}}function counter(){wantToStopMove=!0}function myStopFunction(){return wantToStopMove}document.getElementById("shape").addEventListener("change",changeLabelText),document.getElementById("drawShape").addEventListener("click",(function(){shapeSelector(!1,300,175,1)})),document.getElementById("eraseShape").addEventListener("click",eraseShapeF),document.getElementById("moveShape").addEventListener("click",(function(){wantToStopMove=!1,shapeSelector(!0,Global_xPos,Global_yPos,0,!1)})),document.getElementById("stop").addEventListener("click",counter);